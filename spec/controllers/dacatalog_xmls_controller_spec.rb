require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe DacatalogXmlsController do

  def mock_dacatalog_xml(stubs={})
    @mock_dacatalog_xml ||= mock_model(DacatalogXml, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all dacatalog_xmls as @dacatalog_xmls" do
      DacatalogXml.stub(:all) { [mock_dacatalog_xml] }
      get :index
      assigns(:dacatalog_xmls).should eq([mock_dacatalog_xml])
    end
  end

  describe "GET show" do
    it "assigns the requested dacatalog_xml as @dacatalog_xml" do
      DacatalogXml.stub(:find).with("37") { mock_dacatalog_xml }
      get :show, :id => "37"
      assigns(:dacatalog_xml).should be(mock_dacatalog_xml)
    end
  end

  describe "GET new" do
    it "assigns a new dacatalog_xml as @dacatalog_xml" do
      DacatalogXml.stub(:new) { mock_dacatalog_xml }
      get :new
      assigns(:dacatalog_xml).should be(mock_dacatalog_xml)
    end
  end

  describe "GET edit" do
    it "assigns the requested dacatalog_xml as @dacatalog_xml" do
      DacatalogXml.stub(:find).with("37") { mock_dacatalog_xml }
      get :edit, :id => "37"
      assigns(:dacatalog_xml).should be(mock_dacatalog_xml)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created dacatalog_xml as @dacatalog_xml" do
        DacatalogXml.stub(:new).with({'these' => 'params'}) { mock_dacatalog_xml(:save => true) }
        post :create, :dacatalog_xml => {'these' => 'params'}
        assigns(:dacatalog_xml).should be(mock_dacatalog_xml)
      end

      it "redirects to the created dacatalog_xml" do
        DacatalogXml.stub(:new) { mock_dacatalog_xml(:save => true) }
        post :create, :dacatalog_xml => {}
        #response.should redirect_to(dacatalog_xml_url(mock_dacatalog_xml))
        response.should redirect_to(dacatalog_xmls_url)
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved dacatalog_xml as @dacatalog_xml" do
        DacatalogXml.stub(:new).with({'these' => 'params'}) { mock_dacatalog_xml(:save => false) }
        post :create, :dacatalog_xml => {'these' => 'params'}
        assigns(:dacatalog_xml).should be(mock_dacatalog_xml)
      end

      it "re-renders the 'new' template" do
        DacatalogXml.stub(:new) { mock_dacatalog_xml(:save => false) }
        post :create, :dacatalog_xml => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested dacatalog_xml" do
        DacatalogXml.stub(:find).with("37") { mock_dacatalog_xml }
        mock_dacatalog_xml.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :dacatalog_xml => {'these' => 'params'}
      end

      it "assigns the requested dacatalog_xml as @dacatalog_xml" do
        DacatalogXml.stub(:find) { mock_dacatalog_xml(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:dacatalog_xml).should be(mock_dacatalog_xml)
      end

      it "redirects to the dacatalog_xml" do
        DacatalogXml.stub(:find) { mock_dacatalog_xml(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(dacatalog_xml_url(mock_dacatalog_xml))
      end
    end

    describe "with invalid params" do
      it "assigns the dacatalog_xml as @dacatalog_xml" do
        DacatalogXml.stub(:find) { mock_dacatalog_xml(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:dacatalog_xml).should be(mock_dacatalog_xml)
      end

      it "re-renders the 'edit' template" do
        DacatalogXml.stub(:find) { mock_dacatalog_xml(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested dacatalog_xml" do
      DacatalogXml.stub(:find).with("37") { mock_dacatalog_xml }
      mock_dacatalog_xml.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the dacatalog_xmls list" do
      DacatalogXml.stub(:find) { mock_dacatalog_xml }
      delete :destroy, :id => "1"
      response.should redirect_to(dacatalog_xmls_url)
    end
  end

end
